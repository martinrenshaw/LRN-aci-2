---
- name: TOP LEVEL PLAY - CREATE ACI STUFF
  hosts: apicProd
  connection: local
  gather_facts: False

  vars:
    env: PROD

  tasks:
#
# - ADD vars from csv file
#
    - name: Task 1 - Read vars from csv file
      read_csv:
        path: aci_vars.csv
        key: keyid
      register: CSV_list
      tags: sub

    - name: Task 2 - ENSURE TENANT EXISTS
      aci_tenant:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenantz }}"
        description: "TENANT Created Using Ansible"
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task2'
      loop_control:
        label: "{{ item.value.tenantz }}"

    - name: Task 3 - ENSURE TENANT VRF EXISTS
      aci_vrf:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenantz }}"
        vrf: "{{ item.value.vrfz }}"
        description: "{{ env }} VRF Created Using Ansible"
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task3'
      loop_control:
        label: "{{ item.value.vrfz }}"

    - name: Task 4 - ENSURE PROD-TENANT BRIDGE DOMAIN EXISTS
      tags: BDE
      aci_bd:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: False
        state: "present"
        tenant: "{{ item.value.tenantz }}"
        bd: "{{env}}-{{ item.value.bdz | default('prod_bd') }}"
        vrf: "{{ item.value.vrfz }}"
        description: "BD Created Using Ansible"
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task4'
      loop_control:
        label: "{{ item.value.bdz }}"
      
#   This was to help debug the DICT output # http://www.mydailytutorials.com/ansible-register-variables/
##`    - name: show loop of CSV_list
##`      debug:
##`        msg: "VRF is {{item.value.vrfz}} tenant is {{item.value.tenantz}} BD is {{item.value.bdz}}"
##`      loop: "{{ lookup('dict', CSV_list.dict)}}"
##      tags: BDE

    - name: Task 4 - ENSURE TENANT SUBNET EXISTS
      aci_bd_subnet:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: False
        state: "present"
        tenant: "{{ item.value.tenantz }}"
        bd: "{{env}}-{{ item.value.bdz | default('prod_bd') }}"
        subnet_name: "{{ item.value.bdz }}"
        gateway: "{{ item.value.gatewayz }}"
        mask: 24
        scope: "public"
        description: "Subnet Created Using Ansible"
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task4'
      tags: sub

##    - name: Task 5 - L3out Test
##      aci_l3out:
##        host: "{{ inventory_hostname }}"
##        username: "{{ username }}"
##        password: "{{ password }}"
##        validate_certs: False
##        state: "present"
##        tenant: grey-COMMON
##        name: prod_l3out
##        description: L3out for grey-COMMON
##        domain: l3dom_prod
##        vrf: grey-COMMON-vrf1
##        l3protocol: ospf,bgp
##        route_control: export
##        asn: 100
##      tags: L3out