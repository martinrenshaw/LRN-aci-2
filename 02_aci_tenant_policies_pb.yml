---
- name: ENSURE APPLICATION CONFIGURATION EXISTS
  hosts: apicProd
  connection: local
  gather_facts: False
 # vars_prompt:
 #   - name: "tenant"
 #     prompt: "What would you like to name your Tenant?"
 #     private: no

  tasks:

#
# - ADD vars from csv file
#
    - name: Task 1 - Read vars from csv file
      read_csv:
        path: 02_aci_tenant_policies_vars.csv
        key: keyid
      register: CSV_list
      tags: sub

    - name: TASK 2 - ENSURE TENANT FILTERS EXIST
      aci_filter:
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenant }}"
        filter: "{{ item.value.filter }}"
        descr: "Filter Created Using Ansible"
        output_level: debug
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task2'
#      loop_control:
#        label: "{{ item.value.tenant }}"


    - name: TASK 3 - ENSURE FILTERS HAVE FILTER ENTRIES
      aci_filter_entry:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenant }}"
        filter: "{{ item.value.filter }}"
        entry: "{{ item.value.entry }}"
        ether_type: "ip"
        ip_protocol: "tcp"
        dst_port_start: "{{ item.value.port }}"
        dst_port_end: "{{ item.value.port }}"
        output_level: debug
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task3'
#      loop_control:
#        label: "{{ item.value.tenant }}" 
      
#      with_items:
#        - filter: "https"
#          entry: "https"
#          port: 443
#        - filter: "sql"
#          entry: "sql"
#          port: 1433

    - name: TASK 4 - ENSURE TENANT CONTRACTS EXIST
      aci_contract:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenant }}"
        contract: "{{ item.value.contract }}"
        scope: "context"
        description: "Contract Created Using Ansible"
        output_level: debug
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task4'
#      loop_control:
#        label: "{{ item.value.tenant }}" 

#      with_items:
#        - "web"
#        - "sql"

    - name: TASK 5 - ENSURE CONTRACTS HAVE CONTRACT SUBJECTS
      aci_contract_subject:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ item.value.tenant }}"
        contract: "{{ item.value.contract }}"
        subject: "{{ item.value.subject }}"
        output_level: debug
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task5'
#      loop_control:
#        label: "{{ item.value.tenant }}" 

#      with_items:
#        - contract: "web"
#          subject: "https"
#        - contract: "sql"
#          subject: "sql"

    - name: TASK 6 - ENSURE CONTRACTS SUBJECTS ARE ASSOCIATED WITH FILTERS
      aci_contract_subject_to_filter:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant_name: "{{ item.value.tenant }}"
        contract: "{{ item.value.contract }}"
        subject: "{{ item.value.subject }}"
        filter: "{{ item.value.filter }}"
        output_level: debug
      loop: "{{ lookup('dict', CSV_list.dict) }}"
      when: item.value.taskid == 'task6'
#      loop_control:
#        label: "{{ item.value.tenant }}" 

#      with_items:
#        - contract: "web"
#          subject: "https"
#          filter: "https"
#        - contract: "sql"
#          subject: "sql"
#          filter: "sql"
